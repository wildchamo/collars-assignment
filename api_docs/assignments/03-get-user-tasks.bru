meta {
  name: Get User's Assigned Tasks
  type: http
  seq: 3
}

get {
  url: {{baseUrl}}/users/{{userId}}/tasks?status=pending&priority=high
  body: none
  auth: none
}

params:query {
  ~status: pending
  ~priority: high
}

headers {
  Authorization: Bearer {{authToken}}
  Content-Type: application/json
}

vars {
  userId: 12345
}

docs {
  # Get User's Assigned Tasks

  Retrieve all tasks assigned to a specific user with optional filtering.

  ## Path Parameters:
  - `id`: User ID (required)

  ## Query Parameters (optional):
  - `status`: Filter by task status (pending, in_progress, completed)
  - `priority`: Filter by task priority (low, medium, high)

  ## Response:
  Returns user information, assigned tasks, and statistics.

  ```json
  {
    "success": true,
    "data": {
      "user": {
        "id": "12345",
        "name": "John Doe",
        "email": "john@example.com"
      },
      "tasks": [
        {
          "id": "1",
          "title": "Complete project",
          "status": "pending",
          "priority": "high",
          "due_date": "2024-01-20T10:00:00.000Z",
          "created_by_name": "Jane Manager",
          "created_by_email": "jane@example.com"
        }
      ],
      "statistics": {
        "total": 5,
        "pending": 2,
        "in_progress": 2,
        "completed": 1
      },
      "filters": {
        "status": "pending",
        "priority": "high"
      },
      "totalTasks": 1
    }
  }
  ```

  ## Examples:

  ### All assigned tasks:
  `GET /users/12345/tasks`

  ### Pending tasks only:
  `GET /users/12345/tasks?status=pending`

  ### High priority tasks:
  `GET /users/12345/tasks?priority=high`

  ### Pending high priority tasks:
  `GET /users/12345/tasks?status=pending&priority=high`
}
